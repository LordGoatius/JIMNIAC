use super::{Trit, Word, Tryte};

const N_ONE: Trit = Trit::NOne;
const ZERO:  Trit = Trit::Zero;
const P_ONE: Trit = Trit::POne;

pub const ONE_WORD: Word = Word([P_ONE, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO]);
pub const TWO_WORD: Word = Word([N_ONE, P_ONE, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO]);
pub const THREE_WORD: Word = Word([ZERO, P_ONE, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO]);

pub const ONE_TRYTE: Tryte = Tryte([P_ONE, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO]);
pub const TWO_TRYTE: Tryte = Tryte([N_ONE, P_ONE, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO]);
pub const THREE_TRYTE: Tryte = Tryte([ZERO, P_ONE, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO, ZERO]);
